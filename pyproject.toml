# pyproject.toml

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mbodied-agents"
dynamic = ["version"]
description = 'Embodied AI'
readme = "README.md"
requires-python = ">=3.10, <=3.13"
license = "apache-2.0"
keywords = []
authors = [{ name = "Mbodi Team", email = "info@mbodi.ai" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "coverage[toml]",
  "toml",
  "pytest",
  "pytest-mock",
  "gym",
  "pillow",
  "numpy",
  "opencv-python",
  "anthropic",
  "openai",
  "anthropic",
  "backoff",
  "pydantic",
  "pydantic_numpy",
  "torch",
  "h5py",
  "click",
  "datasets",
  "playsound",
  "pyaudio; 'READTHEDOCS' not in os.environ",
  "xarm-python-sdk",
  "jsonref",
  "art",
]

[project.urls]
Documentation = "https://github.com/mbodiai/mbodied-agents#readme"
Issues = "https://github.com/mbodiai/mbodied-agents/issues"
Source = "https://github.com/mbodiai/mbodied-agents"

[project.scripts]

[tool.hatch.version]
path = "src/mbodied_agents/__about__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
python = "3.11"
path = ".mbodied_agents/envs/mbodied_agents"

[tool.hatch.envs.conda]
type = "conda"
python = "310"
command = "conda"
conda-forge = false
environment-file = "environment.yml"
prefix = ".venv/"

[tool.hatch.envs.default.scripts]
test = "pytest -vv --ignore third_party {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/mbodied_agents tests}"

[tool.coverage.run]
source_pkgs = ["mbodied_agents", "tests"]
branch = true
parallel = true
omit = ["src/mbodied_agents/__about__.py"]

[tool.coverage.paths]
mbodied = ["src/mbodied_agents", "mbodied_agents"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
extend-unsafe-fixes = ["ALL"]
select = [
  "A", "COM812", "C4", "D", "E", "F", "UP", "B", "SIM", "ISC", "N", "ANN", "ASYNC", "S", "T20", "RET", "SIM", "ARG", "PTH", "ERA", "PD", "I", "PLW",
]
ignore = [
  "D100", "D101", "D104", "D106", "ANN101", "ANN102", "ANN003", "UP009", "ANN204", "B026", "ANN001", "ANN401", "ANN202", "D107", "D102", "D103", "E731", "UP006", "UP035", "ANN002",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs}/*" = ["ALL"]
"**__init__.py" = ["F401"]
